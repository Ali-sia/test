import './css/common.css';
import PhotoApiService from './js/api-service';
import photoTpl from './templates/photoTpl.hbs';
import modalTpl from './templates/modalTpl.hbs';

//–∑–º—ñ–Ω–Ω—ñ
const refs = {
  galleryContainer: document.querySelector('.gallery'),
  searchForm: document.querySelector('.search-form'),
  galleryImage: '',
  formEl: document.querySelector('form'),
  modalEl: document.querySelector('.modal'),
  pageEl: document.querySelector('body'),
  btnClose: '',
  modalFavorites: '',
  modalShow: '',
};

const localStorageIdFav = [];
const localStorageIdShow = [];
let isAddedFav = false;
let isAddedShow = false;

const photoApiService = new PhotoApiService();

//–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –±–µ–∑ –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
fetchPhotoDefault();
async function fetchPhotoDefault() {
  const response = await photoApiService.fetchPhotoDefault();
  appendPhotoMarkup(response);
}

//–≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç, —è–∫—â–æ —î - –≤–∏–¥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
refs.formEl.addEventListener('submit', onSearchQuery);
function onSearchQuery(e) {
  e.preventDefault();

  photoApiService.searchQuery = e.currentTarget.elements.searchQuery.value;
  photoApiService.resetPage();
  clearPhotoContainer();
  fetchPhoto();
}
//–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ –∑–∞–ø–∏—Ç–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async function fetchPhoto() {
  const response = await photoApiService.fetchPhoto();
  appendPhotoMarkup(response);
}

//–≤—Å—Ç–∞–≤–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ç–∫—É —Ñ–æ—Ç–æ –∫–∞—Ä—Ç–æ–∫
function appendPhotoMarkup(photo) {
  refs.galleryContainer.insertAdjacentHTML('beforeend', photoTpl(photo.hits));

  refs.galleryImage = document.querySelectorAll('.gallery .gallery-image');

  refs.galleryImage.forEach(image =>
    image.addEventListener('click', () => openModal(image.dataset.id)),
  );
}
//–≤—Å—Ç–∞–≤–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ç–∫—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function appendModalMarkup(photo) {
  refs.modalEl.innerHTML = modalTpl(photo);
}

//–æ—á–∏—Å—Ç–∏—Ç–∏  –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
function clearPhotoContainer() {
  refs.galleryContainer.innerHTML = '';
}

//–≤—ñ–¥–∫—Ä–∏—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ, –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç—É–¥–∏ —ñ–Ω—Ñ–æ –ø—Ä–æ –æ–±—Ä–∞–Ω–µ —Ñ–æ—Ç–æ
async function openModal(id) {
  console.log(' -> openModal -> id', id);
  refs.modalEl.classList.add('modal--show');
  refs.pageEl.classList.add('stop-scrolling');

  const response = await photoApiService.fetchPhotoById(id);
  appendModalMarkup(response[0]);

  refs.btnClose = document.querySelector('.modal__button-close');
  refs.btnClose.addEventListener('click', () => closeModal());

  refs.modalFavorites = document.querySelector('.modal__button-favorites');
  refs.modalShow = document.querySelector('.modal__button-show');
  refs.modalFavorites.addEventListener('click', () => addToFavourite(id));
  refs.modalShow.addEventListener('click', () => addToShow(id));
}
//–∑–∞–∫—Ä–∏—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
function closeModal() {
  refs.modalEl.classList.remove('modal--show');
  refs.pageEl.classList.remove('stop-scrolling');
}

//–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Å–ø–∏—Å–∫—ñ–≤
function addToFavourite(id) {
  if (isAddedFav === true) {
    refs.modalFavorites.classList.remove('added');
    isAddedFav = false;

    console.log(`DELETE FROM addToFavourite`);
    //—è–∫—â–æ –º—ñ—Å—Ç–∏—Ç—å id
    // const idFavorites = JSON.parse(localStorage.getItem('idFavorites'));
    // const indexDelete = idFavorites.indexOf(id);
    // console.log('üå∫ -> addToFavourite -> indexDelete', indexDelete);
    // idFavorites.splice(idFavorites, indexDelete);
    // localStorage.removeItem('idFavorites', JSON.stringify(idFavorites));
  } else {
    refs.modalFavorites.classList.add('added');
    isAddedFav = true;

    console.log(`ADD TO addToFavourite`);
    //#TODO
    //–¥–æ–¥–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ç–∞–∫–æ–≥–æ –∑–∞–ø–∏—Å—É
    localStorageIdFav.push(id);
    const serializedState = JSON.stringify(localStorageIdFav);
    localStorage.setItem('idFavorites', serializedState);
  }
}

function addToShow(id) {
  //   if (!isAddedShow) {
  //     refs.modalShow.classList.remove('added');
  //     isAddedShow = false;

  //     console.log(`DELETE FROM addToFavourite`);
  //   }

  refs.modalShow.classList.add('added');
  //   isAddedShow = true;

  console.log(`ADD TO addToShow`);

  localStorageIdShow.push(id);
  const serializedState = JSON.stringify(localStorageIdShow);
  localStorage.setItem('idShow', serializedState);
}
